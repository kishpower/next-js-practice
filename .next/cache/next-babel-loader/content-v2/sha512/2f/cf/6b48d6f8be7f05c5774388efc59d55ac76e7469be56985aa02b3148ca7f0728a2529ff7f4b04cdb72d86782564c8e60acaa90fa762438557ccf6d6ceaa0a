{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ganeshwalunj/myProjects/react/next-js/myApp/pages/[meetUpId]/index.js\";\nimport { MongoClient, ObjectId } from 'mongodb';\nimport React from 'react';\nimport MeetUpDetail from '../../components/meetups/MeetUpDetail';\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      image: props.meetUpData.image,\n      title: props.meetUpData.title,\n      address: props.meetUpData.address,\n      description: props.meetUpData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://ganesh3075:fHJuKkEwvcpzTvxy@cluster0.ml68afu.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetUpsCollection = db.collection('meetups');\n  const meetups = await meetUpsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(meetups[0]._id);\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetUpId: meetup._id.toString()\n      }\n    })) // [\n    //     {\n    //         params: {\n    //             meetUpId: '1'\n    //         }\n    //     },\n    //     {\n    //         params: {\n    //             meetUpId: '2'\n    //         }\n    //     }\n    // ]\n\n  };\n};\nexport const getStaticProps = async context => {\n  const meetUpId = context.params.meetUpId; // console.log(meetUpId);\n\n  const client = await MongoClient.connect('mongodb+srv://ganesh3075:fHJuKkEwvcpzTvxy@cluster0.ml68afu.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetUpsCollection = db.collection('meetups');\n  const selectedMeetUp = await meetUpsCollection.findOne({\n    _id: ObjectId(meetUpId)\n  });\n  client.close();\n  return {\n    props: {\n      meetUpData: {\n        id: selectedMeetUp._id.toString(),\n        image: selectedMeetUp.image,\n        title: selectedMeetUp.title,\n        address: selectedMeetUp.address,\n        description: selectedMeetUp.description\n      }\n    }\n  };\n};\nexport default MeetUpDetails;","map":{"version":3,"sources":["/Users/ganeshwalunj/myProjects/react/next-js/myApp/pages/[meetUpId]/index.js"],"names":["MongoClient","ObjectId","React","MeetUpDetail","MeetUpDetails","props","meetUpData","image","title","address","description","getStaticPaths","client","connect","db","meetUpsCollection","collection","meetups","find","_id","toArray","console","log","close","fallback","paths","map","meetup","params","meetUpId","toString","getStaticProps","context","selectedMeetUp","findOne","id"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH,CAZD;;AAcA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,4GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAAC,CAAD,CAAP,CAAWE,GAAvB;AACAP,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAER,OAAO,CAACS,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACR,GAAP,CAAWW,QAAX;AAAZ;AAAV,KAAL,CAAlB,CAFJ,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAfG,GAAP;AAiBH,CAzBM;AA2BP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD6C,CAG7C;;AAEA,QAAMjB,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,4GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMiB,cAAc,GAAG,MAAMlB,iBAAiB,CAACmB,OAAlB,CAA0B;AAAEf,IAAAA,GAAG,EAAElB,QAAQ,CAAC4B,QAAD;AAAf,GAA1B,CAA7B;AACAjB,EAAAA,MAAM,CAACW,KAAP;AACA,SAAO;AACHlB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR6B,QAAAA,EAAE,EAAEF,cAAc,CAACd,GAAf,CAAmBW,QAAnB,EADI;AAERvB,QAAAA,KAAK,EAAE0B,cAAc,CAAC1B,KAFd;AAGRC,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KAHd;AAIRC,QAAAA,OAAO,EAAEwB,cAAc,CAACxB,OAJhB;AAKRC,QAAAA,WAAW,EAAEuB,cAAc,CAACvB;AALpB;AADT;AADJ,GAAP;AAWH,CArBM;AAsBP,eAAeN,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\nimport React from 'react'\nimport MeetUpDetail from '../../components/meetups/MeetUpDetail'\n\nconst MeetUpDetails = (props) => {\n    return (\n        <>\n            <MeetUpDetail\n                image={props.meetUpData.image}\n                title={props.meetUpData.title}\n                address={props.meetUpData.address}\n                description={props.meetUpData.description}\n            />\n        </>\n\n    )\n}\n\nexport const getStaticPaths = async () => {\n    const client = await MongoClient.connect('mongodb+srv://ganesh3075:fHJuKkEwvcpzTvxy@cluster0.ml68afu.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n    const meetUpsCollection = db.collection('meetups');\n    const meetups = await meetUpsCollection.find({}, { _id: 1 }).toArray();\n    console.log(meetups[0]._id);\n    client.close()\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({ params: { meetUpId: meetup._id.toString() } }))\n        // [\n        //     {\n        //         params: {\n        //             meetUpId: '1'\n        //         }\n        //     },\n        //     {\n\n        //         params: {\n        //             meetUpId: '2'\n        //         }\n        //     }\n        // ]\n    }\n}\n\nexport const getStaticProps = async (context) => {\n    const meetUpId = context.params.meetUpId;\n\n    // console.log(meetUpId);\n\n    const client = await MongoClient.connect('mongodb+srv://ganesh3075:fHJuKkEwvcpzTvxy@cluster0.ml68afu.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n    const meetUpsCollection = db.collection('meetups');\n    const selectedMeetUp = await meetUpsCollection.findOne({ _id: ObjectId(meetUpId) });\n    client.close()\n    return {\n        props: {\n            meetUpData: {\n                id: selectedMeetUp._id.toString(),\n                image: selectedMeetUp.image,\n                title: selectedMeetUp.title,\n                address: selectedMeetUp.address,\n                description: selectedMeetUp.description\n            }\n        }\n    }\n}\nexport default MeetUpDetails"]},"metadata":{},"sourceType":"module"}