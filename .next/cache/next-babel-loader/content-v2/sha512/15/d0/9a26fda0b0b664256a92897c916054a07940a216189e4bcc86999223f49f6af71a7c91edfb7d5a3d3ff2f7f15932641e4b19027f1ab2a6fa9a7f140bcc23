{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ganeshwalunj/myProjects/react/next-js/myApp/pages/[meetUpId]/index.js\",\n    _this = this;\n\nimport React from 'react';\nimport MeetUpDetail from '../../components/meetups/MeetUpDetail';\n\nvar MeetUpDetails = function MeetUpDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n      image: props.meetUpData.image,\n      title: props.meetUpData.title,\n      address: props.meetUpData.address,\n      description: props.meetUpData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["/Users/ganeshwalunj/myProjects/react/next-js/myApp/pages/[meetUpId]/index.js"],"names":["React","MeetUpDetail","MeetUpDetails","props","meetUpData","image","title","address","description"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBACI;AAAA,2BACI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF5B;AAGI,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH9B;AAII,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJlC;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAWH,CAZD;;KAAMN,a;;AA8DN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb'\nimport React from 'react'\nimport MeetUpDetail from '../../components/meetups/MeetUpDetail'\n\nconst MeetUpDetails = (props) => {\n    return (\n        <>\n            <MeetUpDetail\n                image={props.meetUpData.image}\n                title={props.meetUpData.title}\n                address={props.meetUpData.address}\n                description={props.meetUpData.description}\n            />\n        </>\n\n    )\n}\n\nexport const getStaticPaths = async () => {\n    const client = await MongoClient.connect('mongodb+srv://ganesh3075:fHJuKkEwvcpzTvxy@cluster0.ml68afu.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n    const meetUpsCollection = db.collection('meetups');\n    const meetups = await meetUpsCollection.find({}, { _id: 1 }).toArray();\n    client.close()\n\n    return {\n        fallback: 'blocking',\n        paths: meetups.map(meetup => ({ params: { meetUpId: meetup._id.toString() } }))\n        // [\n        //     {\n        //         params: {\n        //             meetUpId: '1'\n        //         }\n        //     },\n        //     {\n\n        //         params: {\n        //             meetUpId: '2'\n        //         }\n        //     }\n        // ]\n    }\n}\n\nexport const getStaticProps = async (context) => {\n    const meetUpId = context.params.meetUpId;\n\n    // console.log(meetUpId);\n\n    const client = await MongoClient.connect('mongodb+srv://ganesh3075:fHJuKkEwvcpzTvxy@cluster0.ml68afu.mongodb.net/meetups?retryWrites=true&w=majority')\n    const db = client.db();\n    const meetUpsCollection = db.collection('meetups');\n    const selectedMeetUp = await meetUpsCollection.findOne({ _id: new ObjectId(meetUpId) });\n    client.close()\n    return {\n        props: {\n            meetUpData: {\n                id: selectedMeetUp._id.toString(),\n                image: selectedMeetUp.image,\n                title: selectedMeetUp.title,\n                address: selectedMeetUp.address,\n                description: selectedMeetUp.description\n            }\n        }\n    }\n}\nexport default MeetUpDetails"]},"metadata":{},"sourceType":"module"}